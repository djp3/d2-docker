version: '3.8'

networks:
  alpha_network:
    ipam:
      driver: default
      config:
        # This is to manage mysql login security
        - subnet: 172.31.0.0/16

volumes:
  db-volume-opensim:
    name: db-volume-opensim
  file-volume-opensim:
    name: file-volume-opensim


services:
  db:
    build: 
      context: mariadb-service
      args:
        - TZ=${DP_TIME_ZONE}
    networks:
      - alpha_network
    ports:
      - "3306:3306/tcp"
    volumes:
      - type: volume
        source: db-volume-opensim
        target: /var/lib/mysql
        volume:
          nocopy: true
        consistency: consistent
    environment:
      - TZ=${DP_TIME_ZONE}
      - DP_DATABASE_USER
      - DP_DATABASE_USER_PASSWORD
      - MYSQL_ROOT_PASSWORD=${DP_DATABASE_ROOT_PASSWORD}
      - MYSQL_INITDB_SKIP_TZINFO=${DP_INITDB_SKIP_TZINFO}

  adminer:
    image: adminer
    restart: always
    networks:
      - alpha_network
    ports:
      - "8080:8080"
    environment:
      - TZ=${DP_TIME_ZONE}

  #  To do a backup, make sure only backup container is running
  #  then log in
  #    docker-compose up backup
  #  Find the container id with
  #    docker ps
  #  Attach with
  #    docker exec -it <container_id> bash
  #  Install pbzip2
  #     apt update
  #     apt install pbzip2
  #  Backup the db
  #     cd /root
  #     tar cv backupdb/ | pbzip2 > backup_storage/backupdb.tar.bz2
  #  Backup the filesystem
  #     cd /root
  #     tar cv backupfile/ | pbzip2 > backup_storage/backupfile.tar.bz2
  #  Then shutdown the container and move the backups in backup storage
  #  somewhere safe
  #
  #  To restore comment out the two read_only lines below and make sure 
  #  only the backup container is running:
  #    docker-compose up backup
  #  Find the container id with
  #    docker ps
  #  Attach with
  #    docker exec -it <container_id> bash
  #  Install pbzip2
  #    apt update
  #    apt install pbzip2
  #  Move the backup image into place on the host machine
  #  Delete everything in the existing folders
  #    rm -r -f backupdb/* backupfile/*
  #  Restore images 
  #    pbzip2 -d < backup_storage/backupdb.tar.bz2 | tar xvo
  #    pbzip2 -d < backup_storage/backupfile.tar.bz2 | tar xvo
  #  Shutdown the container
  #    docker-compose down
  #  Bring up the system
  #    docker-compose up
  backup:
    image: ubuntu
    volumes:
      - type: bind
        source: ./backup_storage
        target: /root/backup_storage
        consistency: consistent
      - type: volume
        source: file-volume-opensim
        target: /root/backupfile
        read_only: true
        volume:
          nocopy: true
        consistency: consistent
      - type: volume
        source: db-volume-opensim
        target: /root/backupdb
        read_only: true
        volume:
          nocopy: true
        consistency: consistent
    command: ["tail", "-f", "/dev/null"]
    environment:
      - TZ=${DP_TIME_ZONE}

  mono:
    build: 
      context: mono-service
      args:
        - TZ=${DP_TIME_ZONE}
    links:
      - "db:database"
    networks:
      - alpha_network
    volumes:
      - type: volume
        source: file-volume-opensim
        target: /root
        consistency: consistent
    ports:
      - "9000:9000/tcp"
      - "9000:9000/udp"
      - "9001:9001/udp"
      - "9002:9002/udp"
      - "9003:9003/udp"
    depends_on:
      - "db"
    environment:
      - DP_EXTERNAL_NETWORK
      - DP_WORLD_NAME
      - DP_ESTATE_01_NAME
      - DP_ESTATE_OWNER_FIRST
      - DP_ESTATE_OWNER_LAST
      - DP_ESTATE_OWNER_PASSWORD
      - DP_ESTATE_OWNER_EMAIL
      - DP_WIFI_USER_PASSWORD
      - DP_WIFI_USER_EMAIL
      - DP_GMAIL_USER
      - DP_GMAIL_PASSWORD
      - DP_DATABASE_USER_PASSWORD
      - DP_DATABASE_ROOT_PASSWORD
      - DP_DATABASE_HOST
      - DP_DATABASE
      - DP_DATABASE_USER
      - DP_INITDB_SKIP_TZINFO
      - DP_INSTALL_ON_UNIX
      - DP_WIFI_USER_FIRST
      - DP_WIFI_USER_LAST
      - DP_WIFI_ACCOUNT_STYLE
      - DP_UNIVERSAL_CAMPUS
      - TZ=${DP_TIME_ZONE}
      - MYSQL_ROOT_PASSWORD=${DP_DATABASE_ROOT_PASSWORD}
      - MYSQL_INITDB_SKIP_TZINFO=${DP_INITDB_SKIP_TZINFO}
              


